https://github.com/Microsoft/TypeScript-React-Starter
https://github.com/markerikson/redux/blob/structuring-reducers-page/docs/recipes/StructuringReducers.md


structures generate resources
resources are used to craft equipment

https://react-spring.surge.sh/


> https://www.npmjs.com/package/redux-persist#state-reconciler

> Todo: refactor the whole Equipment thing to be Items.
  treat like an inventory? Are there items that are not equipment?


> todo: find todo-plugin for vscode

> todo: check createjs react plugin... 
> https://github.com/Flipboard/react-canvas

Quest def:
z
{
    name: "A quest called tribe",
    startState: {
        bigTreeState: "onTheGround"
    }
    questNodes: [{
        x: 0, y: 1
    }, {
        x: 0, y: 2,
        encounters: [{
            chance: .5,
            getTitle: (questState, store) => "The big tree",
            getDescription: (questState, store) => {
                const pyrommancer = store.adventurers.find(a => a.type == "pyromancer")
                if(pyromander){
                    return "A huge tree blocks the way. {pyromancer.name} offers to burn it".
                }
                return "A huge tree blocks the way";
            }
            getOptions(questState, store): => {
                const strongest = store.adventurers.sort(a => a.stats.strength)[0];
                const options = {
                    "walkAround": "Walk around the tree",
                    "lift": "Lift the tree (${strongest.name})"
                }
                const pyrommancer = store.adventurers.find(a => a.type == "pyromancer")
                if(pyromancer){
                    options.burn = "Burn it down (${pyromancer.name}";
                }
                return options;
            }
            answer(option:string, questState, store) => {
                switch(option){
                    case "walkAround":
                        return "Your party walks around the tree";

                    case "lift":
                        const strongest = store.adventurers.sort(a => a.stats.strength)[0];
                        if(random() < strongest.stats.strenth) {
                            questState.bigTreeState = "lifted";
                            giveGold(3);
                            return "${strongest.name} heaves and lifts the heavy tree, moving it aside. Underneath your party finds 3 gold coins";
                        }
                        else {
                            strongest.loseHealth(20);
                            if(strongest.isDead){
                                return "${strongest.name} attempted to lift the tree but it is too heavy, causing him to die".
                            }
                            return "%{strongest.name} attempted to lift the tree but it is too heavy, losing 20 hp";
                        }
                    case "burn":
                        const pyrommancer = store.adventurers.find(a => a.type == "pyromancer")
                        questState.bigTreeState = "burned";
                        return "${pyromancer.name} cackles as you sets the tree ablaze. The party steps over the smouldering ashes and continues"

                }

            }
        }]
    }]
}


Art: https://andy_victorovych.artstation.com/projects/1yKBo

